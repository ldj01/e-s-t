Code for Global Comparison Between Landsat 7 and MODIS SST
Dr. Kelly Laraby
06/20/2017

This file contains information relating to the code needed to perform validation
studies for Landsat 7, using MODIS Sea Surface Temperature (SST) as truth data.
Note that the main comparison code outputs a text file containing info like LST,
atmospheric parameters, and SST related values. The code to generate distance to
cloud is seperate, and reads in the valiation output and appends cloud distance
to each result.

In order to perform validation with these scripts, the 5 band geotiffs must have
already been generated, as well as the georeferenced, subsetted SST images.
The main script is comparison_batch.bash, which starts the validation process 
for all the the scenes in a provided text file generated by the process that 
downloads the correct SST images per Landsat image. Run just with 
./comparison_batch.bash.



Below is a description of each script needed for global validation of L7. 

  comparison_batch.bash
      Main script to kick of validation process for a set of LST/SST image 
      pairs. Specifies where all necessary input/output files are, and does
      the actual printing of results to file.

  compare_modis_lsat_global.pro
      Main IDL procedure for LST/SST comparison. Skips current case if LST image
      or SST image can't be found, otherwise it calls functions to find good
      comparison points in the SST image, after which grabbing the LST values
      at the same places and recording all relevant info.

  make_l7_zeros_mask.pro
      The SST images are subset to Landsat's upperleft and lowerright corners,
      but there are still large areas in the SST image where there is no data
      in the LST image. This function is pretty much obsolete now though,
      because with Landat 7 imagery you can just use where the data is 0 as 
      a mask when searching through the SST image. 

  find_compare_pts_in_modis.pro
      This steps through an SST image, looking at 10x10 windows until none of
      the pixels are land. Then it looks at the 3x3 in the center and checks
      for at least 5 best quality pixels, and a standard deviation in the 3x3
      less than 0.5 K. This search continues through the image until up to 7
      comparison locations are identified or the end of the image is reached.

  get_lst_at_utms.pro
      The find_compare_pts_in_modis function provides SST values with eastings
      and northings, which are used in this function to calculate LST at the 
      same geospatial locations. A 5x5 window around the location is averaged.

  convert_ll_utm.pro
      Converts lat lon to UTM coordinates.

  convert_rad_temp.pro
      Converts radiance to temperature in Kelvin. Requires a lookup table.



Below is a description of the nearest to cloud scripts:

  submit-dist2cloud.sh
      Script to kick off a cloud distance job in a scheduler

  dist2cloud_global.bash
      Main bash script that reads in the text file produced by the validation
      process, starts the main IDL program, and writes out the results with 
      the cloud distance to a specified file.

  dist2cloud_main.pro
      Reads in cloud mask and geotiff, calls functions, writes temporary output.
  
  get_cloud_mask.pro
      Function that reads in Landsat cloud mask, and alters values so that
      there is a binary image indicating cloud/no cloud. It returns the 
      binary image.

  calc_nearest_cloud_from_loc.pro
      Function that takes a binary cloud mask & geotiff, and an easting and 
      northing to calculate distance to nearest cloud at that location. The
      script calculates the distance from the location of interest to every
      cloud pixel in the cloud mask image, then returns the smallest value
      in units of kilometers.

